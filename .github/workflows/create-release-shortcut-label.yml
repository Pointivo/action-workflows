name: Reusable - Create Release Shortcut Label
on:
  workflow_call:
    inputs:
      imageName:
        required: true
        type: string
      imageTag: # i.e. full version
        required: true
        type: string
      releaseCommit:
        required: true
        type: string
    secrets:
      shortcut-api-token:
        required: true
jobs:
  label-shortcut-stories:
    name: "Label Shortcut Stories"
    runs-on: [ self-hosted, ops-pv ]
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ inputs.releaseCommit }}
          fetch-depth: 6

      - name: Initialize mandatory git config
        run: |
          git config --global --add safe.directory "$GITHUB_WORKSPACE"
          git config user.name "GitHub actions"
          git config user.email noreply@github.com

      - id: find-stories
        name: Find shortcut stories
        run: |
          set -x
          
          prev_release_commit=$( \
            git log --pretty=oneline ${{ inputs.releaseCommit }} \
            | grep 'Create release - ${{ inputs.imageName}}' \
            | head -n 2 \
            | tail -n 1 \
            | awk '{ print $1 }' \
          )
          
          set -v
          
          range="${{ inputs.releaseCommit }}...${prev_release_commit}"
          release_log=$(git log --pretty=oneline "${range}")
          
          stories=$( \
            echo "${release_log}" \
            | grep 'sc-[0-9]' \
            | sed 's/.*sc-\([0-9]\+\).*/\1/g' \
            | sort -u \
          )
          # flatten
          stories=$(echo $stories)
          echo "STORIES=${stories}" >> $GITHUB_ENV
      - name: Label Shortcut Stories
        id: label-shortcut-stories
        run: |
          set -x
          story_ids_spaced="${{ env.STORIES }}"
          if [[ -z "${story_ids_spaced}" ]]; then
            echo "No stories found"
            exit 0
          fi
          image="${{ inputs.imageName }}"
          tag="${{ inputs.imageTag }}"
          json=$( \
            jq -n --indent 0 \
            --argjson ids "[${story_ids_spaced// /,}]" \
            --arg name "test ${image}:${tag}" \
            '{ "story_ids": $ids, "labels_add": [{ "name": $name }] }' \
          )
          
          curl -X PUT \
            -H "Content-Type: application/json" \
            -H "Shortcut-Token: ${{ secrets.shortcut-api-token }}" \
            -d "${json}" \
            -L "https://api.app.shortcut.com/api/v3/stories/bulk"
