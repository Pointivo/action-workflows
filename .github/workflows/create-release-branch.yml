name: Reusable - Create Release (Just Branch, No Build)

on:
  workflow_call:
    inputs:
      releaseVersion:
        required: false
        type: string
      imageName:
        required: true
        type: string
      semverFile:
        required: true
        type: string
      changeLogFile:
        required: true
        type: string
    secrets:
      github-token:
        required: true
    outputs:
      releaseVersion:
        description: "The updated version of the release branch"
        value: ${{ jobs.create-new-release.outputs.releaseVersion }}
      releaseCommit:
        description: "The commit ref of the newly created release branch"
        value: ${{ jobs.create-new-release.outputs.releaseCommit }}
jobs:
  create-new-release:
    name: "Create a new release"
    runs-on: ubuntu-latest
    outputs:
      releaseVersion: ${{ steps.version.outputs.releaseVersion }}
      releaseCommit: ${{ steps.make-commit.outputs.releaseCommit }}
    container:
      image: ghcr.io/pointivo/devops
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.repository.default_branch }}
          fetch-depth: 1

      - name: Set Release Version
        if: inputs.releaseVersion != ''
        env:
          SEMVER_FILE: ${{ inputs.semverFile }}
        run: |
          bash version.sh -s ${{ inputs.releaseVersion }}

      - name: Get Release Version
        id: version
        env:
          SEMVER_FILE: ${{ inputs.semverFile }}
        run: |
          RELEASE_VERSION=$(bash version.sh -g)
          echo "Release version will be ${RELEASE_VERSION}"
          echo "RELEASE_VERSION=${RELEASE_VERSION}" >> $GITHUB_ENV
          RELEASE_SHORT=$(echo "${RELEASE_VERSION}" | awk 'BEGIN {FS=".";OFS="."} { print $1,$2 }')
          echo "RELEASE_SHORT=${RELEASE_SHORT}" >> $GITHUB_ENV
          echo "releaseVersion=$RELEASE_VERSION" >> $GITHUB_OUTPUT

      - name: Update changelog
        uses: thomaseizinger/keep-a-changelog-new-release@1.0.0
        with:
          version: ${{ env.RELEASE_VERSION }}
          changelogPath: ${{ inputs.changeLogFile }}
          tag: ${{ env.RELEASE_VERSION }}-${{ inputs.imageName }}

      - name: Initialize mandatory git config
        run: |
          git config user.name "GitHub actions"
          git config user.email noreply@github.com

      - name: Commit changelog and bump Master
        id: make-commit
        env:
          SEMVER_FILE: ${{ inputs.semverFile }}
        run: |
          git pull origin ${{ github.event.repository.default_branch }}
          git add ${{ inputs.changeLogFile }}
          git add $(bash version.sh -p)
          git status
          git pull origin ${{ github.event.repository.default_branch }}
          git commit --message "Create release - ${{ inputs.imageName }} v${{ env.RELEASE_VERSION }}"
          git push origin ${{ github.event.repository.default_branch }}
          
          echo "releaseCommit=$(git rev-parse HEAD)" >> $GITHUB_OUTPUT
          
          # Bump minor version
          git pull origin ${{ github.event.repository.default_branch }}
          bash version.sh -b minor
          git add $(bash version.sh -p)
          git status
          git pull origin ${{ github.event.repository.default_branch }}
          git commit --message "Bump Minor version after Release (v${RELEASE_VERSION})"
          git push origin ${{ github.event.repository.default_branch }}

      - name: Extract Changelog
        run: |
          sed -n '/## \[${{ env.RELEASE_VERSION }}-${{ inputs.imageName }}\]/,/## \[/p' ${{ inputs.changeLogFile }} | tail -n +2 | sed '$d' > CHANGELOG_RELEASE.md

      - name: Create Release
        env:
          GITHUB_TOKEN: ${{ secrets.github-token }}
        run: gh release create ${{ env.RELEASE_VERSION }}-${{ inputs.imageName }}
          --title "v${{ env.RELEASE_VERSION }} - ${{ inputs.imageName }}"
          --notes-file CHANGELOG_RELEASE.md
          --target ${{ steps.make-commit.outputs.releaseCommit }}

      - name: Create release branch from tag
        run: |
          git fetch
          git checkout -B ${{ inputs.imageName }}/release_${{ env.RELEASE_SHORT }} ${{ env.RELEASE_VERSION }}-${{ inputs.imageName }}
          git push origin ${{ inputs.imageName }}/release_${{ env.RELEASE_SHORT }}
